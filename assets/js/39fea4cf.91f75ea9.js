"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[404],{897:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/signup_typeahead_and_flexible_sheet-b19e2cae2fabf393a9395f8deba1aa1b.gif"},1312:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/signup_dynamic_step_progression-707a0d6c694345f3987f6152de5dda10.gif"},2435:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/signup_subject_select-39efa8a823be679f5f5ab6f697578fb1.gif"},2817:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"development/features/features-signup","title":"Signup Overview","description":"The signup feature guides new users through a dynamic onboarding flow that adapts to their chosen profile and collects all necessary information in a single process. Users can upload files, set their availability, and configure their preferences without downloading multiple apps or hunting for additional settings. This streamlined experience reduces confusion and simplifies account setup.","source":"@site/docs/development/features/signup.mdx","sourceDirName":"development/features","slug":"/development/features/features-signup","permalink":"/tutorlm/docs/development/features/features-signup","draft":false,"unlisted":false,"editUrl":"https://github.com/ohjime/tutorlm/tree/main/docs/docs/development/features/signup.mdx","tags":[],"version":"current","lastUpdatedAt":1750659568000,"frontMatter":{"id":"features-signup","sidebar_label":"Signup Feature"},"sidebar":"developmentSidebar","previous":{"title":"Session Feature","permalink":"/tutorlm/docs/development/features/features-session"},"next":{"title":"Testing","permalink":"/tutorlm/docs/development/testing"}}');var s=n(4848),r=n(8453);const a={id:"features-signup",sidebar_label:"Signup Feature"},d="Signup Overview",l={},o=[{value:"Dependencies",id:"dependencies",level:2},{value:"Feature Overview",id:"feature-overview",level:2},{value:"Dynamic Onboarding Flow",id:"dynamic-onboarding-flow",level:3},{value:"File Upload During Onboarding",id:"file-upload-during-onboarding",level:3},{value:"Guided Onboarding Experience",id:"guided-onboarding-experience",level:3},{value:"Single Signup Process",id:"single-signup-process",level:3},{value:"Easy-to-Use Schedule Form",id:"easy-to-use-schedule-form",level:3},{value:"SignupState",id:"signupstate",level:3},{value:"SignupCubit",id:"signupcubit",level:3},{value:"Methods",id:"methods",level:4},{value:"State Machine Diagram of Signup Feature",id:"state-machine-diagram-of-signup-feature",level:5},{value:"Component Diagram",id:"component-diagram",level:2},{value:"View Details",id:"view-details",level:2},{value:"SignupPage",id:"signuppage",level:3},{value:"Signup Steps",id:"signup-steps",level:3},{value:"Sequence Diagram",id:"sequence-diagram",level:3},{value:"Signup Flow",id:"signup-flow",level:4},{value:"General Structure",id:"general-structure",level:3},{value:"Overview",id:"overview-1",level:2},{value:"Widgets Details",id:"widgets-details",level:2},{value:"SignupWizard",id:"signupwizard",level:3},{value:"Component Diagram of SignupWizard",id:"component-diagram-of-signupwizard",level:5},{value:"Sequence Diagram of SignupWizard",id:"sequence-diagram-of-signupwizard",level:5},{value:"SignupProgressBar",id:"signupprogressbar",level:3},{value:"Component Diagram of SignProgressBar",id:"component-diagram-of-signprogressbar",level:5},{value:"Sequence Diagram of SignupProgressBar",id:"sequence-diagram-of-signupprogressbar",level:5},{value:"SignupSwitcher",id:"signupswitcher",level:3},{value:"Component Diagram of SignupSwitcher",id:"component-diagram-of-signupswitcher",level:5},{value:"Sequence Diagram when the SignupStep Changes.",id:"sequence-diagram-when-the-signupstep-changes",level:5},{value:"SignupStep",id:"signupstep",level:2},{value:"Class Diagram of SignupStep",id:"class-diagram-of-signupstep",level:5},{value:"1. <code>String</code> title",id:"1-string-title",level:5},{value:"2. <code>List&lt;String&gt;</code> dialogue",id:"2-liststring-dialogue",level:5},{value:"3. <code>StepPredicate</code> showIf",id:"3-steppredicate-showif",level:5},{value:"4. <code>StepFormBuilder</code> builder",id:"4-stepformbuilder-builder",level:5},{value:"5. <code>StepCallback</code> callback",id:"5-stepcallback-callback",level:5},{value:"Putting It All Together",id:"putting-it-all-together",level:2}];function c(e){const i={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",img:"img",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"signup-overview",children:"Signup Overview"})}),"\n",(0,s.jsx)(i.p,{children:"The signup feature guides new users through a dynamic onboarding flow that adapts to their chosen profile and collects all necessary information in a single process. Users can upload files, set their availability, and configure their preferences without downloading multiple apps or hunting for additional settings. This streamlined experience reduces confusion and simplifies account setup."}),"\n",(0,s.jsx)(i.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsx)(i.p,{children:"The core signup logic is managed by its state machine, which has one direct external dependency:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"https://pub.dev/packages/flutter_bloc",children:(0,s.jsx)(i.code,{children:"flutter_bloc"})}),": Provides the BLoC pattern for state management, decoupling business logic from UI and facilitating testing."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The signup UI is built in Flutter and relies on the following packages:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"https://pub.dev/packages/flutter_form_builder",children:(0,s.jsx)(i.code,{children:"flutter_form_builder"})}),": Comprehensive form widgets and utilities."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"https://pub.dev/packages/form_builder_validators",children:(0,s.jsx)(i.code,{children:"form_builder_validators"})}),": Validation functions for form inputs."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"https://pub.dev/packages/image_picker",children:(0,s.jsx)(i.code,{children:"image_picker"})}),": Enables file and image uploads during onboarding."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"https://pub.dev/packages/awesome_dialog",children:(0,s.jsx)(i.code,{children:"awesome_dialog"})}),": Displays modal dialogs for file upload feedback and error handling."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Further details on the Signup State Machine and its Views are available in the sub-sections below:"}),"\n",(0,s.jsx)(i.h2,{id:"feature-overview",children:"Feature Overview"}),"\n",(0,s.jsx)(i.p,{children:"Below is a breakdown of each implemented functionality, cross-referenced with the user stories:"}),"\n",(0,s.jsx)(i.h3,{id:"dynamic-onboarding-flow",children:"Dynamic Onboarding Flow"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.em,{children:(0,s.jsx)(i.strong,{children:"User Story #54"})}),": ",(0,s.jsx)(i.em,{children:'"As a user I want to have a dynamic onboarding flow for multiple user types so that I do not have to download different apps for different profiles."'})]}),"\n",(0,s.jsx)(i.p,{children:"The signup wizard adjusts the sequence of steps based on the selected user type (e.g., tutor, student), presenting only relevant fields and options:"}),"\n",(0,s.jsx)("figure",{style:{textAlign:"center"},children:(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsx)(i.tr,{children:(0,s.jsx)(i.th,{style:{textAlign:"center"},children:(0,s.jsx)(i.img,{src:n(3941).A+"",width:"480",height:"1040"})})})}),(0,s.jsx)(i.tbody,{children:(0,s.jsx)(i.tr,{children:(0,s.jsxs)(i.td,{style:{textAlign:"center"},children:[(0,s.jsx)(i.strong,{children:"Figure 1"}),": Dynamic signup wizard adapting to user type"]})})})]})}),"\n",(0,s.jsx)(i.h3,{id:"file-upload-during-onboarding",children:"File Upload During Onboarding"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.em,{children:(0,s.jsx)(i.strong,{children:"User Story #55"})}),": ",(0,s.jsx)(i.em,{children:'"As a user I want to be able to upload files directly in the onboarding step, so that I do not have to search where to add them later."'})]}),"\n",(0,s.jsx)(i.p,{children:"Users can upload profile pictures, qualification documents, and other assets inline:"}),"\n",(0,s.jsx)("figure",{style:{textAlign:"center"},children:(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{style:{textAlign:"center"},children:(0,s.jsx)(i.img,{src:n(7716).A+"",width:"480",height:"1040"})}),(0,s.jsx)(i.th,{style:{textAlign:"center"},children:(0,s.jsx)(i.img,{src:n(8254).A+"",width:"480",height:"1040"})})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsxs)(i.td,{style:{textAlign:"center"},children:[(0,s.jsx)(i.strong,{children:"Figure 2a"}),": Editing form entries with file inputs"]}),(0,s.jsxs)(i.td,{style:{textAlign:"center"},children:[(0,s.jsx)(i.strong,{children:"Figure 2b"}),": Placeholder image before upload"]})]})})]})}),"\n",(0,s.jsx)(i.h3,{id:"guided-onboarding-experience",children:"Guided Onboarding Experience"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.em,{children:(0,s.jsx)(i.strong,{children:"User Story #56"})}),": ",(0,s.jsx)(i.em,{children:'"As a user I want a guided onboarding experience so that I am not confused."'})]}),"\n",(0,s.jsx)(i.p,{children:"Contextual hints and progress indicators help users complete each step without uncertainty:"}),"\n",(0,s.jsx)("figure",{style:{textAlign:"center"},children:(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsx)(i.tr,{children:(0,s.jsx)(i.th,{style:{textAlign:"center"},children:(0,s.jsx)(i.img,{src:n(1312).A+"",width:"480",height:"1040"})})})}),(0,s.jsx)(i.tbody,{children:(0,s.jsx)(i.tr,{children:(0,s.jsxs)(i.td,{style:{textAlign:"center"},children:[(0,s.jsx)(i.strong,{children:"Figure 3"}),": Step progress indicator guiding users"]})})})]})}),"\n",(0,s.jsx)(i.h3,{id:"single-signup-process",children:"Single Signup Process"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.em,{children:(0,s.jsx)(i.strong,{children:"User Story #57"})}),": ",(0,s.jsx)(i.em,{children:'"As a user I would like to have a single onboarding process, so that I can signup and configure all my information in one place without having to find out where else to put that information."'})]}),"\n",(0,s.jsx)(i.p,{children:"All configuration\u2014personal details, subjects, and schedules\u2014happens in one flow:"}),"\n",(0,s.jsx)("figure",{style:{textAlign:"center"},children:(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{style:{textAlign:"center"},children:(0,s.jsx)(i.img,{src:n(4061).A+"",width:"480",height:"1040"})}),(0,s.jsx)(i.th,{style:{textAlign:"center"},children:(0,s.jsx)(i.img,{src:n(5307).A+"",width:"480",height:"1040"})})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsxs)(i.td,{style:{textAlign:"center"},children:[(0,s.jsx)(i.strong,{children:"Figure 4a"}),": Email and password form fields"]}),(0,s.jsxs)(i.td,{style:{textAlign:"center"},children:[(0,s.jsx)(i.strong,{children:"Figure 4b"}),": Saved form entries review"]})]})})]})}),"\n",(0,s.jsx)(i.h3,{id:"easy-to-use-schedule-form",children:"Easy-to-Use Schedule Form"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.em,{children:(0,s.jsx)(i.strong,{children:"User Story #18"})}),": ",(0,s.jsx)(i.em,{children:'"As a user I would like to have an easy to use schedule form so that I don\'t spend too much time inputting my availability."'})]}),"\n",(0,s.jsx)(i.p,{children:"A calendar-style selector allows quick availability selection:"}),"\n",(0,s.jsx)("figure",{style:{textAlign:"center"},children:(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{style:{textAlign:"center"},children:(0,s.jsx)(i.img,{src:n(3895).A+"",width:"480",height:"1040"})}),(0,s.jsx)(i.th,{style:{textAlign:"center"},children:(0,s.jsx)(i.img,{src:n(2435).A+"",width:"480",height:"1040"})})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsxs)(i.td,{style:{textAlign:"center"},children:[(0,s.jsx)(i.strong,{children:"Figure 5a"}),": Schedule selector interface"]}),(0,s.jsxs)(i.td,{style:{textAlign:"center"},children:[(0,s.jsx)(i.strong,{children:"Figure 5b"}),": Subject selection dropdown"]})]})})]})}),"\n",(0,s.jsx)(i.p,{children:"Additional signup screens include typeahead search for topics and review screens:"}),"\n",(0,s.jsx)("figure",{style:{textAlign:"center"},children:(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{style:{textAlign:"center"},children:(0,s.jsx)(i.img,{src:n(897).A+"",width:"480",height:"1040"})}),(0,s.jsx)(i.th,{style:{textAlign:"center"},children:(0,s.jsx)(i.img,{src:n(5307).A+"",width:"480",height:"1040"})})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsxs)(i.td,{style:{textAlign:"center"},children:[(0,s.jsx)(i.strong,{children:"Figure 6a"}),": Typeahead subject search"]}),(0,s.jsxs)(i.td,{style:{textAlign:"center"},children:[(0,s.jsx)(i.strong,{children:"Figure 6b"}),": Final review before submission"]})]})})]})}),"\n",(0,s.jsx)(i.h1,{id:"signup-state-machine",children:"Signup State Machine"}),"\n",(0,s.jsxs)(i.p,{children:["The signup process is orchestrated by ",(0,s.jsx)(i.code,{children:"SignupCubit"}),", which handles form data collection incrementally and delegates persistence to domain repositories (",(0,s.jsx)(i.code,{children:"AuthenticationRepository"}),", ",(0,s.jsx)(i.code,{children:"UserRepository"}),", ",(0,s.jsx)(i.code,{children:"TutorRepository"}),", ",(0,s.jsx)(i.code,{children:"StudentRepository"}),", ",(0,s.jsx)(i.code,{children:"StorageRepository"}),"). Each domain model (",(0,s.jsx)(i.code,{children:"User"}),", ",(0,s.jsx)(i.code,{children:"Tutor"}),", ",(0,s.jsx)(i.code,{children:"Student"}),") is stored and updated immutably in the state, leveraging ",(0,s.jsx)(i.code,{children:"copyWith"})," for safe state transitions."]}),"\n",(0,s.jsx)(i.mermaid,{value:"classDiagram\n    class SignupCubit {\n        - AuthenticationRepository _authenticationRepository\n        - UserRepository _userRepository\n        - StorageRepository _storageRepository\n        - TutorRepository _tutorRepository\n        - StudentRepository _studentRepository\n        + SignupCubit(AuthenticationRepository authenticationRepository, ...)\n        + selectRole(UserRole role)\n        + updateUser(`Map<String, dynamic>` userData)\n        + updateTutor(`Map<String, dynamic>` tutorData)\n        + updateStudent(`Map<String, dynamic>` studentData)\n        + submit()\n        + submitWithGoogle()\n    }\n\n    class SignupState {\n        + SignupStatus status\n        + User user\n        + Tutor tutor\n        + Student student\n        + String? error\n        + SignupState copyWith(...)\n    }\n\n    SignupCubit --\x3e SignupState"}),"\n",(0,s.jsx)(i.h3,{id:"signupstate",children:"SignupState"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"SignupState"})," represents the current signup workflow state:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"status"}),": ",(0,s.jsx)(i.code,{children:"initial"})," | ",(0,s.jsx)(i.code,{children:"loading"})," | ",(0,s.jsx)(i.code,{children:"success"})," | ",(0,s.jsx)(i.code,{children:"failure"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"user"}),": Partial or complete ",(0,s.jsx)(i.code,{children:"User"})," model"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"tutor"}),": Partial or complete ",(0,s.jsx)(i.code,{children:"Tutor"})," model"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"student"}),": Partial or complete ",(0,s.jsx)(i.code,{children:"Student"})," model"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"error"}),": Optional error message on failure"]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["States are immutable; use ",(0,s.jsx)(i.code,{children:"copyWith"})," to create new instances with updated fields."]}),"\n",(0,s.jsx)(i.h3,{id:"signupcubit",children:"SignupCubit"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"SignupCubit"})," manages interaction between UI and repositories, emitting new ",(0,s.jsx)(i.code,{children:"SignupState"})," instances as the user progresses through signup."]}),"\n",(0,s.jsx)(i.h4,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"selectRole(UserRole role)"}),"\nSets the selected user role (",(0,s.jsx)(i.code,{children:"tutor"})," or ",(0,s.jsx)(i.code,{children:"student"}),") in state, allowing the UI to render appropriate form fields."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsxs)(i.strong,{children:["updateUser(",(0,s.jsx)(i.code,{children:"Map<String, dynamic>"})," userData)"]}),"\nMerges incoming ",(0,s.jsx)(i.code,{children:"userData"})," into the existing ",(0,s.jsx)(i.code,{children:"User"})," model via ",(0,s.jsx)(i.code,{children:"copyWith"}),", updating form state without side effects."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsxs)(i.strong,{children:["updateTutor(",(0,s.jsx)(i.code,{children:"Map<String, dynamic>"})," tutorData)"]}),"\nMerges ",(0,s.jsx)(i.code,{children:"tutorData"})," into the ",(0,s.jsx)(i.code,{children:"Tutor"})," model via ",(0,s.jsx)(i.code,{children:"copyWith"}),", updating tutor-specific fields."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsxs)(i.strong,{children:["updateStudent(",(0,s.jsx)(i.code,{children:"Map<String, dynamic>"})," studentData)"]}),"\nMerges ",(0,s.jsx)(i.code,{children:"studentData"})," into the ",(0,s.jsx)(i.code,{children:"Student"})," model via ",(0,s.jsx)(i.code,{children:"copyWith"}),", updating student-specific fields."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"submit()"}),"\nExecutes the full signup flow:"]}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Emit ",(0,s.jsx)(i.code,{children:"loading"})," status."]}),"\n",(0,s.jsxs)(i.li,{children:["Call ",(0,s.jsx)(i.code,{children:"authenticationRepository.signUp(...)"})," to create auth credentials."]}),"\n",(0,s.jsxs)(i.li,{children:["Upload profile images via ",(0,s.jsx)(i.code,{children:"storageRepository.upload..."}),"."]}),"\n",(0,s.jsxs)(i.li,{children:["Create role-specific record (",(0,s.jsx)(i.code,{children:"Tutor"})," or ",(0,s.jsx)(i.code,{children:"Student"}),") in its repository."]}),"\n",(0,s.jsxs)(i.li,{children:["Persist the final ",(0,s.jsx)(i.code,{children:"User"})," model with ",(0,s.jsx)(i.code,{children:"userRepository.create"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:["Emit ",(0,s.jsx)(i.code,{children:"success"})," on completion or ",(0,s.jsx)(i.code,{children:"failure"})," with ",(0,s.jsx)(i.code,{children:"error"})," on exception."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"submitWithGoogle()"}),"\nSimilar to ",(0,s.jsx)(i.code,{children:"submit()"}),", but begins with ",(0,s.jsx)(i.code,{children:"authenticationRepository.signInWithGoogle()"}),". Once credentials are obtained, follows the same sequence: image upload, model creation, and final user persistence."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"We can relate the SignupState and SignupCubit methods using a state machine diagram, which illustrates the different ways a user can reach a specific state in the signup process."}),"\n",(0,s.jsx)(i.h5,{id:"state-machine-diagram-of-signup-feature",children:"State Machine Diagram of Signup Feature"}),"\n",(0,s.jsx)(i.mermaid,{value:"stateDiagram-v2\n    [*] --\x3e Initial : Start\n    Initial : SignupState.initial\n    Initial --\x3e SignupState : updateUser(data)\n    Initial --\x3e SignupState : selectRole(role)\n    Initial --\x3e SignupState  : updateTutor(data)\n    Initial --\x3e SignupState  : updateStudent(data)\n    SignupState --\x3e SignupState.copyWith(loading) : submit()\n    SignupState --\x3e SignupState.copyWith(loading) : submitWithGoogle()\n    SignupState.copyWith(loading) --\x3e SignupState.copyWith(success) : Success\n    SignupState.copyWith(loading) --\x3e SignupState.copyWith(failure) : Failure\n    SignupState.copyWith(success) --\x3e [*] : End\n    SignupState.copyWith(failure) --\x3e SignupState : "}),"\n",(0,s.jsx)(i.h1,{id:"signup-views",children:"Signup Views"}),"\n",(0,s.jsx)(i.h1,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(i.p,{children:["This document provides an overview of the ",(0,s.jsx)(i.code,{children:"SignupPage"})," and its associated components for the signup feature."]}),"\n",(0,s.jsx)(i.h2,{id:"component-diagram",children:"Component Diagram"}),"\n",(0,s.jsx)(i.mermaid,{value:"flowchart TD\n    SignupPage --\x3e SignupWizard\n    SignupPage --\x3e SignupSteps\n    SignupSteps --\x3e IntroStep\n    SignupSteps --\x3e UserAuthStep\n    SignupSteps --\x3e UserScheduleStep\n    SignupSteps --\x3e UserProfileStep\n    SignupSteps --\x3e UserRoleStep\n    SignupSteps --\x3e StudentEducationStep\n    SignupSteps --\x3e StudentCoursesStep\n    SignupSteps --\x3e TutorAcademicCredentialStep\n    SignupSteps --\x3e TutorCoursesStep"}),"\n",(0,s.jsx)(i.h2,{id:"view-details",children:"View Details"}),"\n",(0,s.jsx)(i.h3,{id:"signuppage",children:"SignupPage"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"SignupPage"})," serves as the entry point for the signup feature. It manages the overall flow of the signup process, including navigation between steps and form validation. The page uses the ",(0,s.jsx)(i.code,{children:"SignupWizard"})," to display dialogues and animations, creating an engaging user experience."]}),"\n",(0,s.jsx)(i.h3,{id:"signup-steps",children:"Signup Steps"}),"\n",(0,s.jsxs)(i.p,{children:["The signup process is divided into multiple steps, each represented by a ",(0,s.jsx)(i.code,{children:"SignupStep"})," object. These steps include:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"IntroStep"}),": Introduces the user to the signup process."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"UserAuthStep"}),": Collects authentication details, such as email and password."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"UserScheduleStep"}),": Gathers the user's availability."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"UserProfileStep"}),": Collects profile information, such as name and profile picture."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"UserRoleStep"}),": Allows the user to select their role (e.g., tutor or student)."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"StudentEducationStep"}),": Collects educational details for students."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"StudentCoursesStep"}),": Allows students to select their courses."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"TutorAcademicCredentialStep"}),": Collects academic credentials for tutors."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"TutorCoursesStep"}),": Allows tutors to select the courses they can teach."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"sequence-diagram",children:"Sequence Diagram"}),"\n",(0,s.jsx)(i.h4,{id:"signup-flow",children:"Signup Flow"}),"\n",(0,s.jsx)(i.mermaid,{value:"sequenceDiagram\n    participant User\n    participant SignupPage\n    participant SignupWizard\n    participant SignupCubit\n\n    User->>SignupPage: Open Signup Page\n    SignupPage->>SignupWizard: Initialize Wizard\n    User->>SignupPage: Fill Form and Submit\n    SignupPage->>SignupCubit: Update State\n    SignupCubit--\x3e>SignupPage: Emit New State\n    SignupPage--\x3e>User: Navigate to Next Step"}),"\n",(0,s.jsx)(i.h3,{id:"general-structure",children:"General Structure"}),"\n",(0,s.jsxs)(i.p,{children:["Each step in the signup process is defined by a ",(0,s.jsx)(i.code,{children:"SignupStep"})," object, which includes:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Title"}),": The title of the step."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Dialogue"}),": The dialogue to be displayed during the step."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"ShowIf"}),": A predicate function to determine if the step should be shown."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Builder"}),": A function to build the UI for the step."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Callback"}),": A function to handle the data submitted in the step."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"This modular structure allows for easy customization and extension of the signup process."}),"\n",(0,s.jsx)(i.h1,{id:"signup-components",children:"Signup Components"}),"\n",(0,s.jsx)(i.h2,{id:"overview-1",children:"Overview"}),"\n",(0,s.jsx)(i.p,{children:"This document provides an overview of the components (or widgets) used in the signup feature.  These widgets are modular components that enhance the user experience and simplify the implementation of the signup process."}),"\n",(0,s.jsx)(i.h2,{id:"widgets-details",children:"Widgets Details"}),"\n",(0,s.jsx)(i.h3,{id:"signupwizard",children:"SignupWizard"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"SignupWizard"})," component guides the user through each signup step by animating a series of instructional messages with a typewriter effect. Simultaneously, a Rive animation (e.g., a book asset) plays when the ",(0,s.jsx)(i.code,{children:"say()"})," method is invoked or when the widget loads. This conversational approach emulates the guided experience found in apps like Duolingo and can be extracted as a standalone package for use in other projects."]}),"\n",(0,s.jsx)(i.h5,{id:"component-diagram-of-signupwizard",children:"Component Diagram of SignupWizard"}),"\n",(0,s.jsx)(i.mermaid,{value:"graph LR\n    SignupWizard --\x3e TypewriterText\n    SignupWizard --\x3e RiveAnimation"}),"\n",(0,s.jsx)(i.h5,{id:"sequence-diagram-of-signupwizard",children:"Sequence Diagram of SignupWizard"}),"\n",(0,s.jsx)(i.mermaid,{value:"sequenceDiagram\n    participant User\n    participant SignupWizard\n    participant TypewriterText\n    participant RiveAnimation\n\n    User->>SignupWizard: onLoad/start\n    SignupWizard->>TypewriterText: animate(dialogue)\n    SignupWizard->>RiveAnimation: trigger say()\n    TypewriterText->>User: display text\n    RiveAnimation->>User: play animation\n    User->>SignupWizard: nextStep()"}),"\n",(0,s.jsx)(i.h3,{id:"signupprogressbar",children:"SignupProgressBar"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"SignupProgressBar"})," visually represents the user's progress through the signup flow. It takes the total number of steps and the current step index as inputs, then animates the progress bar smoothly whenever the index changes, providing clear visual feedback to the user."]}),"\n",(0,s.jsx)(i.h5,{id:"component-diagram-of-signprogressbar",children:"Component Diagram of SignProgressBar"}),"\n",(0,s.jsx)(i.mermaid,{value:"graph LR\n    SignupProgressBar --\x3e ProgressBarWidget\n    SignupProgressBar --\x3e AnimationController"}),"\n",(0,s.jsx)(i.h5,{id:"sequence-diagram-of-signupprogressbar",children:"Sequence Diagram of SignupProgressBar"}),"\n",(0,s.jsx)(i.mermaid,{value:"sequenceDiagram\n    participant View\n    participant SignupProgressBar\n    participant AnimationController\n\n    View->>SignupProgressBar: stepIndex updated\n    SignupProgressBar->>AnimationController: animate to newPercent\n    AnimationController->>SignupProgressBar: update rendering\n    SignupProgressBar->>View: display new progress"}),"\n",(0,s.jsx)(i.h3,{id:"signupswitcher",children:"SignupSwitcher"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"SignupSwitcher"})," handles transitions between step widgets using Flutter's ",(0,s.jsx)(i.code,{children:"AnimatedSwitcher"}),". By keying each container to the current step index, it detects changes and animates the transition from the old step to the new one. While page-based animations might simplify this, using ",(0,s.jsx)(i.code,{children:"AnimatedSwitcher"})," gives precise control over entry and exit effects for each step."]}),"\n",(0,s.jsx)(i.h5,{id:"component-diagram-of-signupswitcher",children:"Component Diagram of SignupSwitcher"}),"\n",(0,s.jsx)(i.mermaid,{value:"flowchart TD\n    SignupSwitcher --\x3e AnimatedSwitcher\n    SignupSwitcher --\x3e SignupStep\n    SignupStep --\x3e StepPredicate\n    SignupStep --\x3e StepFormBuilder\n    SignupStep --\x3e StepCallback"}),"\n",(0,s.jsx)(i.h5,{id:"sequence-diagram-when-the-signupstep-changes",children:"Sequence Diagram when the SignupStep Changes."}),"\n",(0,s.jsx)(i.mermaid,{value:"sequenceDiagram\n    participant User\n    participant SignupSwitcher\n    participant SignupStep\n\n    User->>SignupSwitcher: Change currentIndex\n    SignupSwitcher->>AnimatedSwitcher: Change Key Value of Container\n    AnimatedSwitcher->>User: Transition Effect Triggered\n    SignupSwitcher->>SignupStep: Change Current Step\n    SignupStep->>User: Build New Step"}),"\n",(0,s.jsx)(i.h2,{id:"signupstep",children:"SignupStep"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"SignupStep"})," class represents a single step in the signup process, encapsulating title, dialogue, conditional display logic, UI building, and data handling."]}),"\n",(0,s.jsx)(i.h5,{id:"class-diagram-of-signupstep",children:"Class Diagram of SignupStep"}),"\n",(0,s.jsx)(i.mermaid,{value:"classDiagram\n    class SignupStep {\n        + String title\n        + List<String> dialogue\n        + StepPredicate showIf\n        + StepFormBuilder builder\n        + StepCallback callback\n    }\n\n    SignupStep --\x3e StepPredicate\n    SignupStep --\x3e StepFormBuilder\n    SignupStep --\x3e StepCallback\n\n    class StepPredicate {\n        <<typedef>>\n        + bool Function(BuildContext context)\n    }\n\n    class StepFormBuilder {\n        <<typedef>>\n        + Widget Function(BuildContext context, GlobalKey<FormBuilderState> key)\n    }\n\n    class StepCallback {\n        <<typedef>>\n        + void Function(BuildContext context, Map<String, dynamic> data)\n    }"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"SignupStep"})," class contains the following properties:"]}),"\n",(0,s.jsxs)(i.h5,{id:"1-string-title",children:["1. ",(0,s.jsx)(i.code,{children:"String"})," title"]}),"\n",(0,s.jsx)(i.p,{children:"Title is a string that represents the title of the step. Displayed in the AppBar, it provides a constant label for the current step as the animated dialogue changes."}),"\n",(0,s.jsxs)(i.h5,{id:"2-liststring-dialogue",children:["2. ",(0,s.jsx)(i.code,{children:"List<String>"})," dialogue"]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"dialogue"})," list contains the messages shown by ",(0,s.jsx)(i.code,{children:"SignupWizard"}),". Each string is displayed with a typewriter animation to guide the user through the step."]}),"\n",(0,s.jsxs)(i.h5,{id:"3-steppredicate-showif",children:["3. ",(0,s.jsx)(i.code,{children:"StepPredicate"})," showIf"]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"showIf"})," predicate determines whether the step should be shown, based on the current ",(0,s.jsx)(i.code,{children:"BuildContext"}),". This allows conditional steps that adapt to user data or previous responses."]}),"\n",(0,s.jsxs)(i.h5,{id:"4-stepformbuilder-builder",children:["4. ",(0,s.jsx)(i.code,{children:"StepFormBuilder"})," builder"]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"builder"})," function constructs the UI for this step, typically returning a form widget. It receives a ",(0,s.jsx)(i.code,{children:"BuildContext"})," and a ",(0,s.jsx)(i.code,{children:"GlobalKey<FormBuilderState>"})," so external controls (e.g., Next button) can trigger validation."]}),"\n",(0,s.jsxs)(i.h5,{id:"5-stepcallback-callback",children:["5. ",(0,s.jsx)(i.code,{children:"StepCallback"})," callback"]}),"\n",(0,s.jsxs)(i.p,{children:["After form validation, the ",(0,s.jsx)(i.code,{children:"callback"})," is called with the ",(0,s.jsx)(i.code,{children:"BuildContext"})," and a ",(0,s.jsx)(i.code,{children:"Map<String, dynamic>"})," containing the user's input. This allows custom handling of the data, such as saving to a repository or updating application state."]}),"\n",(0,s.jsx)(i.h2,{id:"putting-it-all-together",children:"Putting It All Together"}),"\n",(0,s.jsxs)(i.p,{children:["By combining ",(0,s.jsx)(i.code,{children:"SignupWizard"}),", ",(0,s.jsx)(i.code,{children:"SignupProgressBar"}),", ",(0,s.jsx)(i.code,{children:"SignupSwitcher"}),", and ",(0,s.jsx)(i.code,{children:"SignupStep"}),", you can build a complete, interactive signup flow:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-dart",children:"SignupView(\n  steps: [\n    SignupStep(\n      title: 'Create Account',\n      dialogue: ['Welcome!', 'Let\\'s create your account.'],\n      showIf: (_) => true,\n      builder: (context, key) => EmailForm(key: key),\n      callback: (context, data) { /* save email */ },\n    ),\n    // add additional steps...\n  ],\n);\n"})}),"\n",(0,s.jsx)(i.p,{children:"This setup handles animations, progress tracking, and data flow, offering a modular solution for onboarding experiences."})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},3895:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/signup_schedule_select_form-053d241d2c93165ff4ba1664c0ada787.gif"},3941:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/signup_wizard-15764b95ee9a04da415fa60946042947.gif"},4061:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/signup_email_pass_form-9ddfa52b0dbe4997a8727e0f6156f215.gif"},5307:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/signup_saved_form_entries-f6362b837941f2b722d3949d0a990770.gif"},7716:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/signup_edit_form_entries-4e8ddcacf2d12783fbbaa6c745ba2116.gif"},8254:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/signup_placeholder_image_picker-dde59f916acffa381f75aab98eb7c5f9.gif"}}]);