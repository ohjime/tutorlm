"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6963],{3854:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"development/features/home","title":"Home Overview","description":"The Home feature serves as the primary navigation hub of the application after the user is authenticated and onboarded. It presents a user interface with a main content area, a bottom navigation bar for switching between primary sections (tabs), and a slide-out drawer for accessing settings, support, and other application-level actions.","source":"@site/docs/development/features/home.mdx","sourceDirName":"development/features","slug":"/development/features/home","permalink":"/tutorlm/docs/development/features/home","draft":false,"unlisted":false,"editUrl":"https://github.com/ohjime/tutorlm/tree/main/docs/docs/development/features/home.mdx","tags":[],"version":"current","lastUpdatedAt":1750659381000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5,"sidebar_label":"Home Feature"},"sidebar":"developmentSidebar","previous":{"title":"Chat Feature","permalink":"/tutorlm/docs/development/features/chat"},"next":{"title":"Login Feature","permalink":"/tutorlm/docs/development/features/features-login"}}');var i=t(4848),a=t(8453);const r={sidebar_position:5,sidebar_label:"Home Feature"},d="Home Overview",l={},c=[{value:"Class Diagram",id:"class-diagram",level:2},{value:"Key Relationships",id:"key-relationships",level:2},{value:"Sequence Diagram",id:"sequence-diagram",level:2},{value:"Flow Summary",id:"flow-summary",level:3},{value:"Home Feature State Management",id:"home-feature-state-management",level:2},{value:"Managed State",id:"managed-state",level:3},{value:"State Transitions for Tab Selection",id:"state-transitions-for-tab-selection",level:3},{value:"UI Update",id:"ui-update",level:3},{value:"External Dependencies",id:"external-dependencies",level:2},{value:"chiclet",id:"chiclet",level:3},{value:"flutter_zoom_drawer",id:"flutter_zoom_drawer",level:3},{value:"flutter_bloc",id:"flutter_bloc",level:3},{value:"delayed_display",id:"delayed_display",level:3},{value:"cached_network_image",id:"cached_network_image",level:3},{value:"random_avatar",id:"random_avatar",level:3}];function o(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"home-overview",children:"Home Overview"})}),"\n",(0,i.jsx)(n.p,{children:"The Home feature serves as the primary navigation hub of the application after the user is authenticated and onboarded. It presents a user interface with a main content area, a bottom navigation bar for switching between primary sections (tabs), and a slide-out drawer for accessing settings, support, and other application-level actions."}),"\n",(0,i.jsx)(n.p,{children:"The HomePage widget is the core of this feature. It utilizes a ZoomDrawer for the side menu and a ChicletSegmentedButton for tab navigation. Each tab is defined by a HomeTab object, which encapsulates the tab's title, icon, body content, and any specific actions available in the app bar for that tab."}),"\n",(0,i.jsx)(n.h2,{id:"class-diagram",children:"Class Diagram"}),"\n",(0,i.jsx)(n.p,{children:"This diagram shows the main classes and widgets involved in the Home feature and their relationships."}),"\n",(0,i.jsx)(n.mermaid,{value:'classDiagram\n    direction LR\n    class HomePage {\n        +List~HomeTab~ tabs\n        -_drawerController: ZoomDrawerController\n        -_selectedTabIndex: int\n        +build(BuildContext context) Widget\n        -_buildMainScreen(BuildContext context) Widget\n    }\n\n    class HomeDrawer {\n        +build(BuildContext context) Widget\n    }\n    HomeDrawer ..> AuthenticationRepository : uses\n    HomeDrawer ..> Navigator : uses\n\n    class HomeTab {\n        +tabBody: Widget\n        +tabTitle: String\n        +tabAction(BuildContext context) Widget\n        +tabIcon: Widget\n    }\n\n    class ZoomDrawerController {\n        +toggle()\n        +close()\n        +open()\n    }\n\n    class ZoomDrawer {\n        +controller: ZoomDrawerController\n        +menuScreen: Widget\n        +mainScreen: Widget\n    }\n\n    class ChicletSegmentedButton {\n        +children: List~Widget~\n    }\n\n    class ChicletButtonSegment {\n        +onPressed: void Function()\n        +child: Widget\n    }\n\n    class PrimaryAppBar {\n        +tabTitle: String\n        +tabAction: Widget\n        +onPressed: void Function() (for drawer toggle)\n    }\n    PrimaryAppBar o-- UserAvatar : displays\n\n    class UserAvatar {\n        +onPressed: void Function()\n    }\n    UserAvatar ..> AppBloc : reads\n    UserAvatar ..> UserRepository : uses\n\n    HomePage "1" *-- "1" ZoomDrawerController : controls\n    HomePage "1" *-- "1" ZoomDrawer : uses\n    HomePage "1" *-- "1..*" HomeTab : displays >\n    HomePage "1" *-- "1" ChicletSegmentedButton : uses\n    HomePage "1" *-- "1" PrimaryAppBar : displays in\n\n    ZoomDrawer "1" *-- "1" HomeDrawer : has menuScreen\n    ZoomDrawer "1" *-- "1" Scaffold : has mainScreen (via _buildMainScreen)\n\n    ChicletSegmentedButton "1" *-- "1..*" ChicletButtonSegment : contains\n\n    Scaffold --|> Widget\n    HomePage --|> StatefulWidget\n    HomeDrawer --|> StatelessWidget\n    PrimaryAppBar --|> StatelessWidget\n    UserAvatar --|> StatefulWidget\n    ZoomDrawer --|> Widget\n    ChicletSegmentedButton --|> Widget\n    ChicletButtonSegment --|> Widget'}),"\n",(0,i.jsx)(n.h2,{id:"key-relationships",children:"Key Relationships"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"HomePage"})})," manages a list of ",(0,i.jsx)(n.code,{children:"HomeTab"})," objects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"HomePage"})})," uses a ",(0,i.jsx)(n.code,{children:"ZoomDrawerController"})," to control the ",(0,i.jsx)(n.code,{children:"ZoomDrawer"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ZoomDrawer"})})," displays:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"HomeDrawer"})," as its ",(0,i.jsx)(n.strong,{children:"menu screen"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The main content (",(0,i.jsx)(n.code,{children:"Scaffold"})," managed by ",(0,i.jsx)(n.code,{children:"HomePage"}),") as its ",(0,i.jsx)(n.strong,{children:"main screen"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"HomePage"})})," uses ",(0,i.jsx)(n.code,{children:"ChicletSegmentedButton"})," (composed of ",(0,i.jsx)(n.code,{children:"ChicletButtonSegments"}),") for tab navigation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"HomePage"})})," displays a ",(0,i.jsx)(n.code,{children:"PrimaryAppBar"}),", which can display a ",(0,i.jsx)(n.code,{children:"UserAvatar"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"sequence-diagram",children:"Sequence Diagram"}),"\n",(0,i.jsxs)(n.p,{children:["This diagram illustrates the ",(0,i.jsx)(n.strong,{children:"sequence of interactions"})," when a user taps on a tab in the bottom navigation bar."]}),"\n",(0,i.jsx)(n.mermaid,{value:'sequenceDiagram\n    actor User\n    participant ChicletButtonSegment\n    participant HomePageState\n    participant AnimatedSwitcher\n    participant PrimaryAppBar\n    participant NewTabContent as "Selected HomeTab.tabBody"\n\n    User->>ChicletButtonSegment: taps on tab\n    activate ChicletButtonSegment\n    ChicletButtonSegment->>HomePageState: onPressed() callback\n    deactivate ChicletButtonSegment\n\n    activate HomePageState\n    HomePageState->>HomePageState: setState(_selectedTabIndex = newIndex)\n    HomePageState->>AnimatedSwitcher: rebuilds with new child (NewTabContent)\n    activate AnimatedSwitcher\n\n    AnimatedSwitcher->>NewTabContent: displays\n    activate NewTabContent\n    NewTabContent--\x3e>AnimatedSwitcher: UI rendered\n    deactivate NewTabContent\n\n    AnimatedSwitcher--\x3e>HomePageState: UI updated\n    deactivate AnimatedSwitcher\n\n    HomePageState->>PrimaryAppBar: updates tabTitle & tabAction\n    activate PrimaryAppBar\n    PrimaryAppBar--\x3e>HomePageState: UI updated\n    deactivate PrimaryAppBar\n\n    deactivate HomePageState'}),"\n",(0,i.jsx)(n.h3,{id:"flow-summary",children:"Flow Summary"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.strong,{children:"User"})," taps on a ",(0,i.jsx)(n.code,{children:"ChicletButtonSegment"})," representing a tab."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"onPressed"})," callback of the ",(0,i.jsx)(n.code,{children:"ChicletButtonSegment"})," is triggered."]}),"\n",(0,i.jsxs)(n.li,{children:["Inside ",(0,i.jsx)(n.code,{children:"HomePageState"}),", ",(0,i.jsx)(n.code,{children:"setState"})," is called to update ",(0,i.jsx)(n.code,{children:"_selectedTabIndex"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"HomePage"})," rebuilds.",(0,i.jsx)(n.br,{}),"\n","The ",(0,i.jsx)(n.code,{children:"AnimatedSwitcher"})," receives the new ",(0,i.jsx)(n.code,{children:"tabBody"})," widget."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"AnimatedSwitcher"})," transitions to display the ",(0,i.jsx)(n.strong,{children:"NewTabContent"})," (the ",(0,i.jsx)(n.code,{children:"tabBody"})," of the newly selected ",(0,i.jsx)(n.code,{children:"HomeTab"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"PrimaryAppBar"})," updates its ",(0,i.jsx)(n.code,{children:"tabTitle"})," and ",(0,i.jsx)(n.code,{children:"tabAction"})," based on the new selected tab."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"home-feature-state-management",children:"Home Feature State Management"}),"\n",(0,i.jsxs)(n.p,{children:["Unlike the other features, the ",(0,i.jsx)(n.strong,{children:"Home"})," feature does ",(0,i.jsx)(n.strong,{children:"not"})," manage its state using a bloc or cubit.",(0,i.jsx)(n.br,{}),"\n","This is because the state of the ",(0,i.jsx)(n.code,{children:"HomePage"})," is fairly simple and only requires keeping track of the tab index.",(0,i.jsx)(n.br,{}),"\n","Thus, ",(0,i.jsx)(n.code,{children:"HomePage"})," is managed using a ",(0,i.jsx)(n.code,{children:"StatefulWidget"})," that tracks:"]}),"\n",(0,i.jsx)(n.mermaid,{value:"stateDiagram-v2\n    [*] --\x3e InitialState : Initialize _selectedTabIndex = 0\n\n    InitialState --\x3e TabDisplayed : Show first tab content & app bar\n\n    TabDisplayed --\x3e UserTap : User taps ChicletButtonSegment\n\n    UserTap --\x3e onPressedCallback : onPressed callback triggered\n\n    onPressedCallback --\x3e setStateCall : Call setState(), update _selectedTabIndex\n\n    setStateCall --\x3e RebuildUI : Rebuild HomePage & children\n\n    RebuildUI --\x3e UIUpdate : AnimatedSwitcher shows new tabBody, PrimaryAppBar updates\n\n    UIUpdate --\x3e TabDisplayed : Wait for next interaction"}),"\n",(0,i.jsx)(n.h3,{id:"managed-state",children:"Managed State"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"_selectedTabIndex"})," (int)"]}),(0,i.jsx)(n.br,{}),"\n","An integer representing the index of the currently active tab.",(0,i.jsx)(n.br,{}),"\n","This determines which ",(0,i.jsx)(n.code,{children:"HomeTab"}),"\u2019s content and app bar details are displayed."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"_drawerController"})," (ZoomDrawerController)"]}),(0,i.jsx)(n.br,{}),"\n","Manages the state (open/closed) of the ",(0,i.jsx)(n.code,{children:"ZoomDrawer"}),".",(0,i.jsx)(n.br,{}),"\n","Interactions with this controller (e.g., toggling the drawer) are handled by the ",(0,i.jsx)(n.code,{children:"ZoomDrawer"})," widget itself,",(0,i.jsx)(n.br,{}),"\n","but the controller instance is held by ",(0,i.jsx)(n.code,{children:"HomePageState"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"state-transitions-for-tab-selection",children:"State Transitions for Tab Selection"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Initial State"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"_selectedTabIndex"})," is initialized (e.g., to ",(0,i.jsx)(n.code,{children:"0"}),")."]}),"\n",(0,i.jsx)(n.li,{children:"The content and app bar for the first tab are displayed."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"User Interaction"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The user taps on a ",(0,i.jsx)(n.code,{children:"ChicletButtonSegment"})," inside the ",(0,i.jsx)(n.code,{children:"ChicletSegmentedButton"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"onPressed"})," Callback"]})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"onPressed"})," callback of the tapped segment is invoked."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"setState()"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Inside the callback, ",(0,i.jsx)(n.code,{children:"setState()"})," is called, updating ",(0,i.jsx)(n.code,{children:"_selectedTabIndex"}),(0,i.jsx)(n.br,{}),"\n","to the index of the tapped segment."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Rebuild"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"HomePage"})," widget and its relevant children (like ",(0,i.jsx)(n.code,{children:"AnimatedSwitcher"})," for the body",(0,i.jsx)(n.br,{}),"\n","and ",(0,i.jsx)(n.code,{children:"PrimaryAppBar"}),") rebuild."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"ui-update",children:"UI Update"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"AnimatedSwitcher"})," displays the ",(0,i.jsx)(n.code,{children:"tabBody"})," of the ",(0,i.jsx)(n.code,{children:"HomeTab"})," at the new ",(0,i.jsx)(n.code,{children:"_selectedTabIndex"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"PrimaryAppBar"})," updates its ",(0,i.jsx)(n.code,{children:"tabTitle"})," and ",(0,i.jsx)(n.code,{children:"tabAction"})," based on the properties",(0,i.jsx)(n.br,{}),"\n","of the ",(0,i.jsx)(n.code,{children:"HomeTab"})," at the new ",(0,i.jsx)(n.code,{children:"_selectedTabIndex"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This internal state management is ",(0,i.jsx)(n.strong,{children:"suitable"})," for ",(0,i.jsx)(n.code,{children:"HomePage"})," because its state is primarily concerned",(0,i.jsx)(n.br,{}),"\n","with local UI presentation (which tab is active, drawer visibility)",(0,i.jsx)(n.br,{}),"\n","and ",(0,i.jsx)(n.strong,{children:"doesn\u2019t"})," need to be shared across unrelated features."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"external-dependencies",children:"External Dependencies"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Home"})," feature leverages several external packages to achieve its functionality and appearance:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h3,{id:"chiclet",children:(0,i.jsx)(n.a,{href:"https://pub.dev/packages/chiclet",children:"chiclet"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Provides custom UI elements."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ChicletSegmentedButton"})," and ",(0,i.jsx)(n.code,{children:"ChicletButtonSegment"})," are used to create the stylized bottom tab navigation bar in ",(0,i.jsx)(n.code,{children:"HomePage"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ChicletAnimatedButton"})," is used for the action button within the ",(0,i.jsx)(n.code,{children:"PrimaryAppBar"})," (e.g., ",(0,i.jsx)(n.strong,{children:'"New Session"'}),", ",(0,i.jsx)(n.strong,{children:'"New Message"'}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h3,{id:"flutter_zoom_drawer",children:(0,i.jsx)(n.a,{href:"https://pub.dev/packages/flutter_zoom_drawer",children:"flutter_zoom_drawer"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Implements the main drawer navigation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"ZoomDrawer"})," widget wraps the ",(0,i.jsx)(n.code,{children:"HomePage"}),"\u2019s main screen and the ",(0,i.jsx)(n.code,{children:"HomeDrawer"}),", providing the characteristic zoom/slide animation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ZoomDrawerController"})," is used to programmatically control the drawer\u2019s state (e.g., toggling from the ",(0,i.jsx)(n.code,{children:"PrimaryAppBar"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h3,{id:"flutter_bloc",children:(0,i.jsx)(n.a,{href:"https://pub.dev/packages/flutter_bloc",children:"flutter_bloc"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": State management and dependency injection."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["While ",(0,i.jsx)(n.code,{children:"HomePage"})," itself uses ",(0,i.jsx)(n.code,{children:"StatefulWidget"})," for local UI state, ",(0,i.jsx)(n.code,{children:"HomeDrawer"})," accesses ",(0,i.jsx)(n.code,{children:"AuthenticationRepository"})," (typically via ",(0,i.jsx)(n.code,{children:"context.read(AuthenticationRepository)()"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"UserAvatar"})," (used in ",(0,i.jsx)(n.code,{children:"PrimaryAppBar"}),") also reads from ",(0,i.jsx)(n.code,{children:"AppBloc"})," and ",(0,i.jsx)(n.code,{children:"UserRepository"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h3,{id:"delayed_display",children:(0,i.jsx)(n.a,{href:"https://pub.dev/packages/delayed_display",children:"delayed_display"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Adds entrance animations to widgets."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Used in ",(0,i.jsx)(n.code,{children:"PrimaryAppBar"})," to animate the appearance of the tab title and action widgets, enhancing visual appeal when switching tabs or when the app bar first appears."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h3,{id:"cached_network_image",children:(0,i.jsx)(n.a,{href:"https://pub.dev/packages/cached_network_image",children:"cached_network_image"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Efficiently loads and caches network images."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Employed by the ",(0,i.jsx)(n.code,{children:"UserAvatar"})," widget (displayed in the ",(0,i.jsx)(n.code,{children:"PrimaryAppBar"}),") to show the user\u2019s profile picture, with placeholder and error handling."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h3,{id:"random_avatar",children:(0,i.jsx)(n.a,{href:"https://pub.dev/packages/random_avatar",children:"random_avatar"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Generates placeholder avatars."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Used by the ",(0,i.jsx)(n.code,{children:"UserAvatar"})," widget as a fallback when a user\u2019s profile image is not available, providing a visually consistent placeholder based on the user\u2019s name."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["These packages contribute significantly to the ",(0,i.jsx)(n.strong,{children:"user experience"})," and ",(0,i.jsx)(n.strong,{children:"structural organization"})," of the Home feature."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);