"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5370],{7901:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>S,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"development/features/features-session","title":"Session Overview","description":"1. Overall Feature Overview","source":"@site/docs/development/features/session.mdx","sourceDirName":"development/features","slug":"/development/features/features-session","permalink":"/tutorlm/docs/development/features/features-session","draft":false,"unlisted":false,"editUrl":"https://github.com/ohjime/tutorlm/tree/main/docs/docs/development/features/session.mdx","tags":[],"version":"current","lastUpdatedAt":1748802124000,"frontMatter":{"id":"features-session","sidebar_label":"Session Feature"},"sidebar":"developmentSidebar","previous":{"title":"Login Feature","permalink":"/tutorlm/docs/development/features/features-login"},"next":{"title":"Signup Feature","permalink":"/tutorlm/docs/development/features/features-signup"}}');var t=i(4848),o=i(8453);const a={id:"features-session",sidebar_label:"Session Feature"},r="Session Overview",l={},d=[{value:"1. Overall Feature Overview",id:"1-overall-feature-overview",level:2},{value:"2. Session List Sub-Feature",id:"2-session-list-sub-feature",level:2},{value:"2.1. Overview",id:"21-overview",level:3},{value:"2.2. Class Diagram (<code>SessionList</code>)",id:"22-class-diagram-sessionlist",level:3},{value:"Key Relationships:",id:"key-relationships",level:4},{value:"2.3. State Diagram (<code>SessionListBloc</code>)",id:"23-state-diagram-sessionlistbloc",level:3},{value:"2.4. Sequence Diagram: Applying a Filter (<code>SessionList</code>)",id:"24-sequence-diagram-applying-a-filter-sessionlist",level:3},{value:"3. Session Create Sub-Feature",id:"3-session-create-sub-feature",level:2},{value:"3.1. Overview",id:"31-overview",level:3},{value:"3.2. Class Diagram (<code>SessionCreate</code>)",id:"32-class-diagram-sessioncreate",level:3},{value:"Key Relationships:",id:"key-relationships-1",level:4},{value:"3.3. State Diagram (<code>SessionCreateBloc</code>)",id:"33-state-diagram-sessioncreatebloc",level:3},{value:"3.4. Sequence Diagram: Submitting a New Session (<code>SessionCreate</code>)",id:"34-sequence-diagram-submitting-a-new-session-sessioncreate",level:3},{value:"4. Session Detail Sub-Feature",id:"4-session-detail-sub-feature",level:2},{value:"4.1. Overview",id:"41-overview",level:3},{value:"4.2. Class Diagram (<code>SessionDetail</code>)",id:"42-class-diagram-sessiondetail",level:3},{value:"Key Relationships:",id:"key-relationships-2",level:4},{value:"4.3. State Diagram (<code>SessionDetailBloc</code>)",id:"43-state-diagram-sessiondetailbloc",level:3},{value:"4.4. Sequence Diagram: Loading Session Details (<code>SessionDetail</code>)",id:"44-sequence-diagram-loading-session-details-sessiondetail",level:3},{value:"5. External Dependencies for Session Feature",id:"5-external-dependencies-for-session-feature",level:2}];function c(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"session-overview",children:"Session Overview"})}),"\n",(0,t.jsx)(s.h2,{id:"1-overall-feature-overview",children:"1. Overall Feature Overview"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"Session"})," feature is a cornerstone of the application, enabling users (both students and tutors) to manage their learning and teaching engagements. It encompasses functionalities for:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.strong,{children:["Listing Sessions (",(0,t.jsx)(s.code,{children:"SessionList"}),"):"]})," Users can view a list of their past, current, and upcoming sessions. This view includes filtering capabilities by date and session status, and allows users to search for specific sessions."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.strong,{children:["Creating Sessions (",(0,t.jsx)(s.code,{children:"SessionCreate"}),"):"]})," Students can initiate the process of booking a new session. This involves selecting a tutor, choosing an available time slot from the tutor's schedule, adding any necessary details, reviewing the session information, and finally submitting the booking."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.strong,{children:["Viewing Session Details (",(0,t.jsx)(s.code,{children:"SessionDetail"}),"):"]})," Users can view detailed information about a specific session, including participant IDs, scheduled times, status, and potentially engage in actions related to the session like starting, ending, or recording audio."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"These sub-features are interconnected, with users typically navigating from the list to details, or creating a session which then appears in their list. Each part utilizes BLoCs for state management and interacts with core repositories for data persistence."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"2-session-list-sub-feature",children:"2. Session List Sub-Feature"}),"\n",(0,t.jsx)(s.h3,{id:"21-overview",children:"2.1. Overview"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"Session List"})," sub-feature provides users with a comprehensive view of their scheduled, ongoing, completed, or cancelled sessions. It's designed to be interactive, allowing users to filter sessions by date and status, and to search for specific sessions. Each item in the list serves as an entry point to the ",(0,t.jsx)(s.code,{children:"SessionDetail"})," page."]}),"\n",(0,t.jsxs)(s.h3,{id:"22-class-diagram-sessionlist",children:["2.2. Class Diagram (",(0,t.jsx)(s.code,{children:"SessionList"}),")"]}),"\n",(0,t.jsx)(s.mermaid,{value:"classDiagram\n    direction LR\n\n    class SessionListView {\n        +build(BuildContext context) Widget\n    }\n    SessionListView ..> SessionListBloc : provides\n\n    class _SessionListContent {\n        +build(BuildContext context) Widget\n    }\n    _SessionListContent o-- SessionListFilters : uses\n    _SessionListContent o-- SessionListItems : uses\n\n    class SessionListFilters {\n        +onChanged(SessionListFilter filter) void\n        -_currentFilter: SessionListFilter\n        -_pickerSelectedDate: DateTime\n        +build(BuildContext context) Widget\n        -_updateFilter() void\n    }\n    SessionListFilters ..> SessionListBloc : dispatches SessionListFilterChanged\n\n    class SessionListItems {\n        +build(BuildContext context) Widget\n        +buildSessionTile(BuildContext context, Session session) Widget\n    }\n    SessionListItems ..> SessionListBloc : listens to\n    SessionListItems ..> Navigator : navigates to SessionDetail\n\n    class SessionListBloc {\n        -_sessionRepository: SessionRepository\n        +SessionListBloc(SessionRepository repo)\n        # _onSubscriptionRequested(event, emit)\n        # _onFilterChanged(event, emit)\n    }\n    SessionListBloc --|> Bloc\n\n    class SessionListState {\n        +status: SessionListStatus\n        +sessions: List<Session>\n        +filter: SessionListFilter\n        +filteredSessions: List<Session>\n        +copyWith(...) SessionListState\n    }\n\n    class SessionListEvent\n    class SessionListSubscriptionRequested {\n    }\n    SessionListSubscriptionRequested --|> SessionListEvent\n    class SessionListFilterChanged {\n        +filter: SessionListFilter\n    }\n    SessionListFilterChanged --|> SessionListEvent\n\n    class SessionRepository {\n        +getSessions() Stream<List<Session>>\n    }\n\n    class Session {\n        +id: String\n        +timeslot: TimeSlot\n        +tutorId: String\n        +studentId: String\n        +status: SessionStatus\n    }\n\n    class SessionListFilter {\n        +selectedDate: DateTime?\n        +statuses: Set<SessionStatus>\n        +searchStrings: Set<String>\n        +apply(Iterable<Session> sessions) Iterable<Session>\n    }\n\n    class SessionStatus {\n        <<enumeration>>\n        scheduled\n        inProgress\n        completed\n        cancelled\n    }\n    %% Bloc is a base class (not shown in diagram)\n    \n    SessionListView --|> StatelessWidget\n    _SessionListContent --|> StatelessWidget\n    SessionListFilters --|> StatefulWidget\n    SessionListItems --|> StatefulWidget\n    SessionListBloc ..> SessionRepository : uses\n    SessionListState o-- Session : contains list of\n    SessionListState o-- SessionListFilter : contains\n    SessionListFilter o-- SessionStatus : uses set of"}),"\n",(0,t.jsx)(s.h4,{id:"key-relationships",children:"Key Relationships:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionListView"})," provides the ",(0,t.jsx)(s.code,{children:"SessionListBloc"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"_SessionListContent"})," composes ",(0,t.jsx)(s.code,{children:"SessionListFilters"})," and ",(0,t.jsx)(s.code,{children:"SessionListItems"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionListFilters"})," allows users to change the ",(0,t.jsx)(s.code,{children:"SessionListFilter"})," and dispatches ",(0,t.jsx)(s.code,{children:"SessionListFilterChanged"})," events to the ",(0,t.jsx)(s.code,{children:"SessionListBloc"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionListItems"})," listens to the ",(0,t.jsx)(s.code,{children:"SessionListBloc"})," for the ",(0,t.jsx)(s.code,{children:"filteredSessions"})," and displays them. Tapping an item navigates to the ",(0,t.jsx)(s.code,{children:"SessionDetail"})," page."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionListBloc"})," subscribes to ",(0,t.jsx)(s.code,{children:"SessionRepository"})," to get session data and applies the ",(0,t.jsx)(s.code,{children:"SessionListFilter"})," from ",(0,t.jsx)(s.code,{children:"SessionListState"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.h3,{id:"23-state-diagram-sessionlistbloc",children:["2.3. State Diagram (",(0,t.jsx)(s.code,{children:"SessionListBloc"}),")"]}),"\n",(0,t.jsx)(s.mermaid,{value:"stateDiagram-v2\n    [*] --\x3e Initial : App Start / Feature Entry\n    Initial --\x3e Loading : SessionListSubscriptionRequested\n    Loading --\x3e Success : Sessions Loaded\n    Loading --\x3e Failure : Error Loading Sessions\n    Success --\x3e Success : SessionListFilterChanged (updates filteredSessions)\n    Success --\x3e Loading : SessionListSubscriptionRequested (e.g. refresh)\n    Failure --\x3e Loading : SessionListSubscriptionRequested (e.g. retry)\n    Success --\x3e [*] : Feature Exit\n    Failure --\x3e [*] : Feature Exit"}),"\n",(0,t.jsxs)(s.h3,{id:"24-sequence-diagram-applying-a-filter-sessionlist",children:["2.4. Sequence Diagram: Applying a Filter (",(0,t.jsx)(s.code,{children:"SessionList"}),")"]}),"\n",(0,t.jsx)(s.mermaid,{value:"sequenceDiagram\n    actor User\n    participant FiltersWidget as SessionListFilters\n    participant SessionListBloc\n    participant SessionListItems\n\n    User->>FiltersWidget: Interacts with filter control (e.g., selects a date or status)\n    activate FiltersWidget\n    FiltersWidget->>FiltersWidget: _updateFilter()\n    FiltersWidget->>SessionListBloc: add SessionListFilterChanged(newFilter)\n    deactivate FiltersWidget\n    activate SessionListBloc\n    SessionListBloc->>SessionListBloc: Updates state.filter with newFilter\n    SessionListBloc->>SessionListBloc: Recalculates state.filteredSessions\n    SessionListBloc--\x3e>SessionListItems: (State update with new filteredSessions)\n    deactivate SessionListBloc\n    activate SessionListItems\n    SessionListItems->>SessionListItems: Re-renders list with new filteredSessions\n    deactivate SessionListItems"}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"3-session-create-sub-feature",children:"3. Session Create Sub-Feature"}),"\n",(0,t.jsx)(s.h3,{id:"31-overview",children:"3.1. Overview"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"Session Create"})," sub-feature guides a student through a multi-step process to book a new tutoring session. This typically involves selecting a tutor, choosing an available time slot from that tutor's schedule, optionally adding more details, reviewing the complete session information, and finally submitting the request. The feature uses a modal interface (",(0,t.jsx)(s.code,{children:"SessionCreateModal"}),") and a dedicated BLoC (",(0,t.jsx)(s.code,{children:"SessionCreateBloc"}),") to manage the state of this creation flow."]}),"\n",(0,t.jsxs)(s.h3,{id:"32-class-diagram-sessioncreate",children:["3.2. Class Diagram (",(0,t.jsx)(s.code,{children:"SessionCreate"}),")"]}),"\n",(0,t.jsx)(s.mermaid,{value:"classDiagram\n    direction LR\n\n    class SessionCreateModal {\n        +build(BuildContext context) Widget\n    }\n    SessionCreateModal ..> SessionCreateBloc : provides\n\n    class SessionCreateView {\n        +build(BuildContext context) Widget\n    }\n    SessionCreateView o-- SessionCreateProgressBar : uses\n    SessionCreateView o-- InitialStep : displays (conditionally)\n    SessionCreateView o-- SelectSessionStep : displays (conditionally)\n    SessionCreateView o-- AddDetailsStep : displays (conditionally)\n    SessionCreateView o-- ReviewSessionStep : displays (conditionally)\n    SessionCreateView o-- SessionCreated : displays (conditionally)\n    SessionCreateView ..> SessionCreateBloc : listens to & dispatches events\n\n    class SessionCreateProgressBar {\n        +currentStep: int\n        +totalSteps: int\n    }\n\n    class InitialStep {\n        +build(BuildContext context) Widget\n    }\n    InitialStep ..> SessionCreateBloc : dispatches Start\n\n    class SelectSessionStep {\n        +build(BuildContext context) Widget\n    }\n    SelectSessionStep o-- TutorCards : uses\n    SelectSessionStep o-- AvailableTimeSlots : uses\n    SelectSessionStep ..> SessionCreateBloc : listens to & dispatches ChangeTutor, SelectSession\n\n    class TutorCards {\n        +tutorList: List<Map<String, dynamic>>\n    }\n    class AvailableTimeSlots {\n        +selectedTutorUser: User\n    }\n\n    class AddDetailsStep {\n        +build(BuildContext context) Widget\n    }\n    AddDetailsStep ..> SessionCreateBloc : dispatches ProvideDetails\n\n    class ReviewSessionStep {\n        +build(BuildContext context) Widget\n    }\n    ReviewSessionStep ..> SessionCreateBloc : dispatches Submit\n\n    class SessionCreated {\n        +build(BuildContext context) Widget\n    }\n\n    class SessionCreateBloc {\n        -_tutorRepository: TutorRepository\n        -_userRepository: UserRepository\n        -_sessionRepository: SessionRepository\n        +SessionCreateBloc(...)\n        # _onStart(event, emit)\n        # _onChangeTutor(event, emit)\n        # _onSelectSession(event, emit)\n        # _onProvideDetails(event, emit)\n        # _onSubmit(event, emit)\n        # _onBack(event, emit)\n    }\n    SessionCreateBloc --|> Bloc\n\n    class SessionCreateState {\n        +currentStep: int\n    }\n    class InitialState {\n    }\n    InitialState --|> SessionCreateState\n    class SelectSessionState {\n        +tutorData: Map<String, Map<String, dynamic>>\n    }\n    SelectSessionState --|> SessionCreateState\n    class SessionDetailsState {\n        +session: Session\n    }\n    SessionDetailsState --|> SessionCreateState\n    class SessionReviewState {\n        +session: Session\n    }\n    SessionReviewState --|> SessionCreateState\n    class SubmissionSuccess {\n    }\n    SubmissionSuccess --|> SessionCreateState\n\n    class Initial extends InitialState\n    class LoadingTutors extends SelectSessionState\n    class LoadingTutorsError extends SelectSessionState\n    class SessionsLoaded extends SelectSessionState {\n        +selectedTutor: Tutor\n        +selectedUser: User\n    }\n    class ProvidingDetails extends SessionDetailsState\n    class UnSubmitted extends SessionReviewState\n    class Submitting extends SessionReviewState\n    class SubmissionError extends SessionReviewState\n    class Success extends SubmissionSuccess\n\n    class SessionCreateEvent\n    class Start extends SessionCreateEvent\n    class ChangeTutor extends SessionCreateEvent\n    class SelectSession extends SessionCreateEvent\n    class ProvideDetails extends SessionCreateEvent\n    class Submit extends SessionCreateEvent\n    class Back extends SessionCreateEvent\n\n    class SessionRepository {\n        +create(Session session) Future<void>\n    }\n    class TutorRepository {\n        +getTutors() Future<List<Tutor>>\n    }\n    class UserRepository {\n        +getUser(String uid) Future<User>\n    }\n    class Session { }\n    class Tutor { }\n    class User { }\n    class TimeSlot { }\n\n    SessionCreateModal --|> StatelessWidget\n    SessionCreateView --|> StatefulWidget\n    SessionCreateProgressBar --|> StatelessWidget\n    InitialStep --|> StatelessWidget\n    SelectSessionStep --|> StatelessWidget\n    TutorCards --|> StatelessWidget\n    AvailableTimeSlots --|> StatelessWidget\n    AddDetailsStep --|> StatelessWidget\n    ReviewSessionStep --|> StatelessWidget\n    SessionCreated --|> StatelessWidget\n\n    SessionCreateBloc ..> TutorRepository : uses\n    SessionCreateBloc ..> UserRepository : uses\n    SessionCreateBloc ..> SessionRepository : uses\n    SelectSessionState o-- Tutor : (via tutorData, selectedTutor)\n    SelectSessionState o-- User : (via tutorData, selectedUser)\n    SessionDetailsState o-- Session : contains\n    SessionReviewState o-- Session : contains"}),"\n",(0,t.jsx)(s.h4,{id:"key-relationships-1",children:"Key Relationships:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionCreateModal"})," provides the ",(0,t.jsx)(s.code,{children:"SessionCreateBloc"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionCreateView"})," orchestrates the display of different step widgets (",(0,t.jsx)(s.code,{children:"InitialStep"}),", ",(0,t.jsx)(s.code,{children:"SelectSessionStep"}),", etc.) based on the ",(0,t.jsx)(s.code,{children:"SessionCreateState.currentStep"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["Each step widget can dispatch events to the ",(0,t.jsx)(s.code,{children:"SessionCreateBloc"})," (e.g., ",(0,t.jsx)(s.code,{children:"Start"}),", ",(0,t.jsx)(s.code,{children:"SelectSession"}),", ",(0,t.jsx)(s.code,{children:"Submit"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionCreateBloc"})," interacts with ",(0,t.jsx)(s.code,{children:"TutorRepository"}),", ",(0,t.jsx)(s.code,{children:"UserRepository"}),", and ",(0,t.jsx)(s.code,{children:"SessionRepository"})," to fetch tutor data, user data (for tutor schedules), and to create the new session."]}),"\n"]}),"\n",(0,t.jsxs)(s.h3,{id:"33-state-diagram-sessioncreatebloc",children:["3.3. State Diagram (",(0,t.jsx)(s.code,{children:"SessionCreateBloc"}),")"]}),"\n",(0,t.jsx)(s.mermaid,{value:"stateDiagram-v2\n    direction LR\n    [*] --\x3e Initial\n    Initial --\x3e LoadingTutors\n    LoadingTutors --\x3e SessionsLoaded\n    LoadingTutors --\x3e LoadingTutorsError\n    LoadingTutorsError --\x3e Initial\n    SessionsLoaded --\x3e SessionsLoaded\n    SessionsLoaded --\x3e ProvidingDetails\n    ProvidingDetails --\x3e UnSubmitted\n    UnSubmitted --\x3e Submitting\n    Submitting --\x3e Success\n    Submitting --\x3e SubmissionError\n    Success --\x3e [*]\n    SubmissionError --\x3e UnSubmitted"}),"\n",(0,t.jsxs)(s.h3,{id:"34-sequence-diagram-submitting-a-new-session-sessioncreate",children:["3.4. Sequence Diagram: Submitting a New Session (",(0,t.jsx)(s.code,{children:"SessionCreate"}),")"]}),"\n",(0,t.jsx)(s.mermaid,{value:'sequenceDiagram\n    actor User\n    participant ReviewStep as ReviewSessionStep\n    participant SessionCreateBloc\n    participant SessionRepository\n\n    User->>ReviewStep: Taps "Submit Session" button\n    activate ReviewStep\n    ReviewStep->>SessionCreateBloc: add Submit(session)\n    deactivate ReviewStep\n    activate SessionCreateBloc\n    SessionCreateBloc->>SessionCreateBloc: emit Submitting(session) state\n    SessionCreateBloc->>SessionRepository: create(session)\n    activate SessionRepository\n    SessionRepository--\x3e>SessionCreateBloc: (Success or Error)\n    deactivate SessionRepository\n    alt Session Creation Successful\n        SessionCreateBloc->>SessionCreateBloc: emit Success state\n    else Session Creation Failed\n        SessionCreateBloc->>SessionCreateBloc: emit SubmissionError(errorMessage, session) state\n    end\n    SessionCreateBloc--\x3e>SessionCreateView: (State update: Success or SubmissionError)\n    deactivate SessionCreateBloc'}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"4-session-detail-sub-feature",children:"4. Session Detail Sub-Feature"}),"\n",(0,t.jsx)(s.h3,{id:"41-overview",children:"4.1. Overview"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"Session Detail"})," sub-feature allows users to view comprehensive information about a specific session they have selected from the ",(0,t.jsx)(s.code,{children:"SessionList"}),". This includes details like the session ID, status, participants (tutor and student IDs), scheduled start and end times, and duration. It also provides a placeholder for session-related actions, such as starting, ending, or recording audio for the session."]}),"\n",(0,t.jsxs)(s.h3,{id:"42-class-diagram-sessiondetail",children:["4.2. Class Diagram (",(0,t.jsx)(s.code,{children:"SessionDetail"}),")"]}),"\n",(0,t.jsx)(s.mermaid,{value:"classDiagram\n    direction LR\n\n    class SessionDetailPage {\n        +sessionId: String\n        +build(BuildContext context) Widget\n    }\n    SessionDetailPage ..> SessionDetailBloc : provides\n\n    class SessionDetailView {\n        +sessionId: String\n        +build(BuildContext context) Widget\n    }\n    SessionDetailView o-- _SessionDetailContent : displays (conditionally)\n    SessionDetailView o-- _ErrorView : displays (conditionally)\n    SessionDetailView ..> SessionDetailBloc : listens to & dispatches events\n\n    class _SessionDetailContent {\n        +session: Session\n        +build(BuildContext context) Widget\n    }\n    _SessionDetailContent o-- _InfoCard : uses multiple\n    _SessionDetailContent o-- _ActionButtonsSection : uses\n\n    class _InfoCard {\n        +title: String\n        +children: List<Widget>\n    }\n    _InfoCard o-- _InfoRow : uses multiple\n\n    class _InfoRow {\n        +label: String\n        +value: String\n        +icon: IconData\n    }\n\n    class _ActionButtonsSection {\n        +session: Session\n        -_audioRecorder: SimpleAudioRecorder\n        -_isRecording: bool\n        -_audioBytes: List<int>?\n        +build(BuildContext context) Widget\n        -_toggleRecording() Future<void>\n        -_saveAudioFile() Future<void>\n    }\n    _ActionButtonsSection o-- SimpleAudioRecorder : uses\n\n    class SimpleAudioRecorder {\n        -_recorder: AudioRecorder\n        -_lastRecording: List<int>?\n        -_isRecording: bool\n        +start() Future<void>\n        +stop() Future<void>\n        +dispose() Future<void>\n        +saveToFile() Future<bool>\n    }\n\n    class _ErrorView {\n        +error: String\n        +onRetry: void Function()\n    }\n\n    class SessionDetailBloc {\n        -_sessionRepository: SessionRepository\n        +SessionDetailBloc(SessionRepository repo)\n        # _onSessionDetailRequested(event, emit)\n        # _onSessionDetailRefreshRequested(event, emit)\n    }\n    SessionDetailBloc --|> Bloc\n\n    class SessionDetailState {\n    }\n    class SessionDetailInitial extends SessionDetailState\n    class SessionDetailLoading extends SessionDetailState\n    class SessionDetailLoaded extends SessionDetailState {\n        +session: Session\n    }\n    class SessionDetailError extends SessionDetailState {\n        +error: String\n    }\n\n    class SessionDetailEvent {\n    }\n    class SessionDetailRequested extends SessionDetailEvent {\n        +sessionId: String\n    }\n    class SessionDetailRefreshRequested extends SessionDetailEvent {\n        +sessionId: String\n    }\n\n    class SessionRepository {\n        +getSessionById(String sessionId) Future<Session?>\n    }\n    class Session { }\n    class AudioRecorder { }\n\n    SessionDetailPage --|> StatelessWidget\n    SessionDetailView --|> StatelessWidget\n    _SessionDetailContent --|> StatelessWidget\n    _InfoCard --|> StatelessWidget\n    _InfoRow --|> StatelessWidget\n    _ActionButtonsSection --|> StatefulWidget\n    _ErrorView --|> StatelessWidget\n\n    SessionDetailBloc ..> SessionRepository : uses\n    SessionDetailLoaded o-- Session : contains"}),"\n",(0,t.jsx)(s.h4,{id:"key-relationships-2",children:"Key Relationships:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionDetailPage"})," provides the ",(0,t.jsx)(s.code,{children:"SessionDetailBloc"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionDetailView"})," listens to the ",(0,t.jsx)(s.code,{children:"SessionDetailBloc"})," and conditionally displays either ",(0,t.jsx)(s.code,{children:"_SessionDetailContent"})," (on success) or ",(0,t.jsx)(s.code,{children:"_ErrorView"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"_SessionDetailContent"})," displays session information using ",(0,t.jsx)(s.code,{children:"_InfoCard"})," and ",(0,t.jsx)(s.code,{children:"_InfoRow"})," widgets, and includes ",(0,t.jsx)(s.code,{children:"_ActionButtonsSection"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"_ActionButtonsSection"})," uses ",(0,t.jsx)(s.code,{children:"SimpleAudioRecorder"})," for audio recording functionality."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionDetailBloc"})," interacts with ",(0,t.jsx)(s.code,{children:"SessionRepository"})," to fetch details for a specific session."]}),"\n"]}),"\n",(0,t.jsxs)(s.h3,{id:"43-state-diagram-sessiondetailbloc",children:["4.3. State Diagram (",(0,t.jsx)(s.code,{children:"SessionDetailBloc"}),")"]}),"\n",(0,t.jsx)(s.mermaid,{value:"stateDiagram-v2\n    [*] --\x3e Initial\n    Initial --\x3e Loading\n    Loading --\x3e Loaded\n    Loading --\x3e Error\n    Loaded --\x3e Loading\n    Error --\x3e Loading\n    Loaded --\x3e [*]\n    Error --\x3e [*]"}),"\n",(0,t.jsxs)(s.h3,{id:"44-sequence-diagram-loading-session-details-sessiondetail",children:["4.4. Sequence Diagram: Loading Session Details (",(0,t.jsx)(s.code,{children:"SessionDetail"}),")"]}),"\n",(0,t.jsx)(s.mermaid,{value:"sequenceDiagram\n    participant User\n    participant SessionDetailPage\n    participant SessionDetailBloc\n    participant SessionRepository\n    participant SessionDetailView\n\n    User->>SessionDetailPage: Navigates to session detail (with sessionId)\n    activate SessionDetailPage\n    SessionDetailPage->>SessionDetailBloc: new SessionDetailBloc(SessionRepo)\n    SessionDetailPage->>SessionDetailBloc: add SessionDetailRequested(sessionId)\n    deactivate SessionDetailPage\n    activate SessionDetailBloc\n    SessionDetailBloc->>SessionDetailBloc: emit SessionDetailLoading state\n    SessionDetailBloc--\x3e>SessionDetailView: (State update: Loading)\n    activate SessionDetailView\n    SessionDetailView->>SessionDetailView: Displays loading indicator\n    deactivate SessionDetailView\n\n    SessionDetailBloc->>SessionRepository: getSessionById(sessionId)\n    activate SessionRepository\n    SessionRepository--\x3e>SessionDetailBloc: returns Session data (or null/error)\n    deactivate SessionRepository\n\n    alt Session Found\n        SessionDetailBloc->>SessionDetailBloc: emit SessionDetailLoaded(session) state\n    else Session Not Found or Error\n        SessionDetailBloc->>SessionDetailBloc: emit SessionDetailError(errorMsg) state\n    end\n    SessionDetailBloc--\x3e>SessionDetailView: (State update: Loaded or Error)\n    activate SessionDetailView\n    alt SessionDetailLoaded\n        SessionDetailView->>SessionDetailView: Displays session content\n    else SessionDetailError\n        SessionDetailView->>SessionDetailView: Displays error message and retry option\n    end\n    deactivate SessionDetailView\n    deactivate SessionDetailBloc"}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"5-external-dependencies-for-session-feature",children:"5. External Dependencies for Session Feature"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"Session"})," feature (across its List, Create, and Detail parts) utilizes several external packages:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"flutter_bloc"})}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Core state management."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": ",(0,t.jsx)(s.code,{children:"SessionListBloc"}),", ",(0,t.jsx)(s.code,{children:"SessionCreateBloc"}),", and ",(0,t.jsx)(s.code,{children:"SessionDetailBloc"})," are all built using this package to manage their respective states and business logic. ",(0,t.jsx)(s.code,{children:"BlocProvider"})," and ",(0,t.jsx)(s.code,{children:"BlocBuilder"})," (or ",(0,t.jsx)(s.code,{children:"BlocListener"}),") are used in the UI."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"equatable"})}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Simplifies value equality comparisons for BLoC states and events."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": All BLoC states and events within the Session feature extend ",(0,t.jsx)(s.code,{children:"Equatable"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"delayed_display"})}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Adds entrance animations."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": Used in ",(0,t.jsx)(s.code,{children:"SessionCreateView"})," to animate the appearance of step content."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"loading_indicator"})}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Provides a collection of loading indicator animations."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": Used in ",(0,t.jsx)(s.code,{children:"SessionCreateView"})," for loading states (e.g., ",(0,t.jsx)(s.code,{children:"LoadingTutors"}),")."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"flutter_staggered_animations"})}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Provides staggered animations for list items."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": Used in ",(0,t.jsx)(s.code,{children:"SessionListItems"})," to animate the appearance of session tiles as they are loaded or filtered."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"easy_date_timeline"})}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Provides a customizable horizontal date picker."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": Used in ",(0,t.jsx)(s.code,{children:"SessionListFilters"})," for selecting a date to filter sessions."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"intl"})}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Provides internationalization and localization utilities, including date/time formatting."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": Used for formatting dates and times in ",(0,t.jsx)(s.code,{children:"SessionListFilters"}),", ",(0,t.jsx)(s.code,{children:"AvailableTimeSlots"})," (in ",(0,t.jsx)(s.code,{children:"SessionCreate"}),"), and ",(0,t.jsx)(s.code,{children:"_SessionDetailContent"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"change_case"})}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Utility for converting string cases (e.g., ",(0,t.jsx)(s.code,{children:"snake_case"})," to ",(0,t.jsx)(s.code,{children:"Title Case"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": Used in ",(0,t.jsx)(s.code,{children:"SessionListFilters"})," to format ",(0,t.jsx)(s.code,{children:"SessionStatus"})," enum names for display in choice chips."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"flip_card_swiper"})}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Creates a swipable card interface with a flip animation."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": Used in ",(0,t.jsx)(s.code,{children:"SelectSessionStep"})," (within ",(0,t.jsx)(s.code,{children:"SessionCreate"}),") for displaying ",(0,t.jsx)(s.code,{children:"TutorCards"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"grouped_list"})}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Displays a list view with items grouped by a specified criterion."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": Used in ",(0,t.jsx)(s.code,{children:"AvailableTimeSlots"})," (within ",(0,t.jsx)(s.code,{children:"SessionCreate"}),") to group available time slots by day."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"record"})}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Enables audio recording."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": Used by ",(0,t.jsx)(s.code,{children:"SimpleAudioRecorder"})," in the ",(0,t.jsx)(s.code,{children:"SessionDetail"})," feature to record audio."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"file_picker"})}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Allows users to pick files or save files to the device."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": Used by ",(0,t.jsx)(s.code,{children:"SimpleAudioRecorder"})," in the ",(0,t.jsx)(s.code,{children:"SessionDetail"})," feature to allow users to save their recorded audio."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"percent_indicator"})})," (implicitly via ",(0,t.jsx)(s.code,{children:"SessionCreateProgressBar"}),"):","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Purpose"}),": Provides circular and linear progress indicators."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Usage"}),": ",(0,t.jsx)(s.code,{children:"SessionCreateProgressBar"})," uses ",(0,t.jsx)(s.code,{children:"LinearPercentIndicator"})," from this package."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"These packages enhance the functionality, user experience, and development efficiency of the Session feature."})]})}function S(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);